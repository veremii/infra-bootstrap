# ==============================================
# Host to Environment Mapping
# ==============================================
# Определяет какую конфигурацию использовать
# на каждом хосте
# ==============================================

hosts:
  # === Production Infrastructure ===

  # Edge nodes (публичные, с Traefik)
  prod-edge-de1.example.com:
    env: production
    config: production/edge-de1.env
    role: edge
    datacenter: hetzner-de
    swarm_labels:
      - "node.labels.role==edge"
      - "node.labels.dc==de"

  prod-edge-us1.example.com:
    env: production
    config: production/edge-us1.env
    role: edge
    datacenter: digitalocean-nyc
    swarm_labels:
      - "node.labels.role==edge"
      - "node.labels.dc==us"

  # App nodes (приватные, бэкенды)
  prod-app-1.internal:
    env: production
    config: production/app-1.env
    role: app
    datacenter: hetzner-de
    swarm_labels:
      - "node.labels.role==app"
      - "node.labels.tier==primary"

  prod-app-2.internal:
    env: production
    config: production/app-2.env
    role: app
    datacenter: hetzner-de
    swarm_labels:
      - "node.labels.role==app"
      - "node.labels.tier==secondary"

  # Database nodes
  prod-db-1.internal:
    env: production
    config: production/db-1.env
    role: database
    datacenter: hetzner-de
    swarm_labels:
      - "node.labels.role==db"
      - "node.labels.db==postgres"

  # === Staging Infrastructure ===

  staging-1.example.com:
    env: staging
    config: staging/all.env
    role: all-in-one
    datacenter: hetzner-de
    swarm_labels:
      - "node.labels.env==staging"

  staging-2.example.com:
    env: staging
    config: staging/all.env
    role: all-in-one
    datacenter: hetzner-de
    swarm_labels:
      - "node.labels.env==staging"

  # === Development Infrastructure ===

  dev-local:
    env: development
    config: development/local.env
    role: all-in-one
    datacenter: local

  dev-vagrant:
    env: development
    config: development/vagrant.env
    role: all-in-one
    datacenter: local

  # === Client VPN Nodes ===

  office-gw.vpn:
    env: production
    config: clients/office.env
    role: vpn-client
    datacenter: office

# Настройки по умолчанию
defaults:
  env: production
  config: production/default.env
  role: app
  datacenter: unknown
  swarm_labels:
    - "node.labels.role==app"

# Глобальные переменные для окружений
environments:
  production:
    wireguard_network: "10.88.0.0/24"
    docker_networks:
      - edge
      - app
      - infra
    monitoring: true
    backups: true

  staging:
    wireguard_network: "10.89.0.0/24"
    docker_networks:
      - edge
      - app
      - infra
    monitoring: true
    backups: false

  development:
    wireguard_network: "10.90.0.0/24"
    docker_networks:
      - default
    monitoring: false
    backups: false
